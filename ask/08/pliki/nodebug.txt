
bar.o:     file format elf64-x86-64


even.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <is_even>:
   0:	48 85 ff             	test   %rdi,%rdi
   3:	75 06                	jne    b <is_even+0xb>
   5:	b8 01 00 00 00       	mov    $0x1,%eax
   a:	c3                   	retq   
   b:	48 83 ec 08          	sub    $0x8,%rsp
   f:	48 83 ef 01          	sub    $0x1,%rdi
  13:	e8 00 00 00 00       	callq  18 <is_even+0x18>
  18:	48 83 c4 08          	add    $0x8,%rsp
  1c:	c3                   	retq   

foo.o:     file format elf64-x86-64


merge-1.o:     file format elf64-x86-64


merge-2.o:     file format elf64-x86-64


mismatch-a.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	48 83 ec 08          	sub    $0x8,%rsp
   4:	e8 00 00 00 00       	callq  9 <main+0x9>
   9:	b8 00 00 00 00       	mov    $0x0,%eax
   e:	48 83 c4 08          	add    $0x8,%rsp
  12:	c3                   	retq   

mismatch-b.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <p2>:
   0:	48 83 ec 08          	sub    $0x8,%rsp
   4:	0f be 35 00 00 00 00 	movsbl 0x0(%rip),%esi        # b <p2+0xb>
   b:	bf 00 00 00 00       	mov    $0x0,%edi
  10:	b8 00 00 00 00       	mov    $0x0,%eax
  15:	e8 00 00 00 00       	callq  1a <p2+0x1a>
  1a:	c6 05 00 00 00 00 00 	movb   $0x0,0x0(%rip)        # 21 <p2+0x21>
  21:	48 83 c4 08          	add    $0x8,%rsp
  25:	c3                   	retq   

odd.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <is_odd>:
   0:	48 85 ff             	test   %rdi,%rdi
   3:	75 06                	jne    b <is_odd+0xb>
   5:	b8 00 00 00 00       	mov    $0x0,%eax
   a:	c3                   	retq   
   b:	48 83 ec 08          	sub    $0x8,%rsp
   f:	48 83 ef 01          	sub    $0x1,%rdi
  13:	e8 00 00 00 00       	callq  18 <is_odd+0x18>
  18:	48 83 c4 08          	add    $0x8,%rsp
  1c:	c3                   	retq   

relo3.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <relo3>:
   0:	83 ff 68             	cmp    $0x68,%edi
   3:	7f 13                	jg     18 <relo3+0x18>
   5:	83 ff 67             	cmp    $0x67,%edi
   8:	7d 17                	jge    21 <relo3+0x21>
   a:	83 ff 64             	cmp    $0x64,%edi
   d:	74 1a                	je     29 <relo3+0x29>
   f:	83 ff 65             	cmp    $0x65,%edi
  12:	75 11                	jne    25 <relo3+0x25>
  14:	8d 47 01             	lea    0x1(%rdi),%eax
  17:	c3                   	retq   
  18:	83 ff 69             	cmp    $0x69,%edi
  1b:	75 08                	jne    25 <relo3+0x25>
  1d:	8d 47 05             	lea    0x5(%rdi),%eax
  20:	c3                   	retq   
  21:	8d 47 03             	lea    0x3(%rdi),%eax
  24:	c3                   	retq   
  25:	8d 47 06             	lea    0x6(%rdi),%eax
  28:	c3                   	retq   
  29:	89 f8                	mov    %edi,%eax
  2b:	c3                   	retq   

start.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_start>:
   0:	48 83 ec 08          	sub    $0x8,%rsp
   4:	bf 2a 00 00 00       	mov    $0x2a,%edi
   9:	e8 00 00 00 00       	callq  e <_start+0xe>
   e:	89 c7                	mov    %eax,%edi
  10:	b8 3c 00 00 00       	mov    $0x3c,%eax
  15:	0f 05                	syscall 
  17:	48 83 c4 08          	add    $0x8,%rsp
  1b:	c3                   	retq   

str-a.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
   0:	48 83 ec 08          	sub    $0x8,%rsp
   4:	e8 00 00 00 00       	callq  9 <main+0x9>
   9:	48 89 c7             	mov    %rax,%rdi
   c:	c6 40 05 00          	movb   $0x0,0x5(%rax)
  10:	e8 00 00 00 00       	callq  15 <main+0x15>
  15:	b8 00 00 00 00       	mov    $0x0,%eax
  1a:	48 83 c4 08          	add    $0x8,%rsp
  1e:	c3                   	retq   

str-b.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <somestr>:
   0:	b8 00 00 00 00       	mov    $0x0,%eax
   5:	c3                   	retq   

swap.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <incr>:
   0:	83 05 00 00 00 00 01 	addl   $0x1,0x0(%rip)        # 7 <incr+0x7>
   7:	c3                   	retq   

0000000000000008 <swap>:
   8:	b8 00 00 00 00       	mov    $0x0,%eax
   d:	e8 ee ff ff ff       	callq  0 <incr>
  12:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 19 <swap+0x11>
  19:	8b 10                	mov    (%rax),%edx
  1b:	8b 0d 00 00 00 00    	mov    0x0(%rip),%ecx        # 21 <swap+0x19>
  21:	89 08                	mov    %ecx,(%rax)
  23:	89 15 00 00 00 00    	mov    %edx,0x0(%rip)        # 29 <swap+0x21>
  29:	c3                   	retq   
