#using HTTP
using Printf
function get_value(x :: Float64)
    r = HTTP.request("GET", "http://roxy.pythonanywhere.com/f3?x=$x")
    return parse(Float64, String(r.body))
end

n = 32
xs = range(0,1,length=n+1)
#points = Dict(zip(xs, map(get_value, xs)))
#points = map(get_value, xs)

#points=Dict(1.0 => 2.4334111284087605,0.34375 => 1.011679699898047,0.53125 => 2.5308531859238483,0.375 => 0.632737224892964,0.9375 => 3.0288321895592873,0.25 => 2.4992265805312783,0.875 => 3.539169318177361,0.6875 => 0.8997151785589093,0.96875 => 2.630504947887388,0.0 => 1.0,0.15625 => 1.41937122727587,0.4375 => 0.9470299905963155,0.1875 => 2.0532501876161646,0.625 => 1.765178281804267,0.03125 => 0.5321003942888668,0.78125 => 2.0422695255877152,0.09375 => 0.35142184030262047,0.3125 => 1.5985015789428254,0.5625 => 2.589634374788522,0.0625 => 0.26992780235505853,0.21875 => 2.4596190504642874,0.40625 => 0.6073240985418755,0.5 => 2.1278742743422274,0.90625 => 3.402386649612671,0.71875 => 0.9384750721490298,0.28125 => 2.167858766797898,0.65625 => 1.2254683792093766,0.8125 => 2.771752170737563,0.46875 => 1.5257090875093473,0.59375 => 2.2923151934028163,0.75 => 1.3597196632424378,0.84375 => 3.3217064869346054,0.125 => 0.7791104177864162)

points = [1.0, 0.5321003942888668, 0.26992780235505853, 0.35142184030262047, 0.7791104177864162, 1.41937122727587, 2.0532501876161646, 2.4596190504642874, 2.4992265805312783, 2.167858766797898, 1.5985015789428254, 1.011679699898047, 0.632737224892964, 0.6073240985418755, 0.9470299905963155, 1.5257090875093473, 2.1278742743422274, 2.5308531859238483, 2.589634374788522, 2.2923151934028163, 1.765178281804267, 1.2254683792093766, 0.8997151785589093, 0.9384750721490298, 1.3597196632424378, 2.0422695255877152, 2.771752170737563, 3.3217064869346054, 3.539169318177361, 3.402386649612671, 3.0288321895592873, 2.630504947887388, 2.4334111284087605]

trapezoidal(y, h) = h*(sum(y) - 0.5*y[1] - 0.5*y[end])

simpson(y,h) = h/3*(4*sum(y) - 2*(sum(y[1:2:end])) - y[1] - y[end])

maxd4f = 1.61e4
simpsonerr(h) = h^4/180*maxd4f

function runtrapezoidal(k)
    y = points[1:Int(n/k):end]
    h = 1/k
    result = trapezoidal(y,h)
    @printf "trapezoid(%d):\tresult=%.5f\n" k result
end

function runsimpson(k)
    y = points[1:Int(n/k):end]
    h = 1/k
    abserr = simpsonerr(h)
    result = simpson(y,h)
    relerr = abs(abserr/result)
    digits = -log10(relerr)
    @printf "simpson(%d):\tresult=%.5f;\tdigits=%.3f\n" k result digits
end

map(runtrapezoidal, [1,2,4,8,16,32])
map(runsimpson, [1,2,4,8,16,32])

# vim: et
